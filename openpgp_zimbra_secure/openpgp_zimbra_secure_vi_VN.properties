# 
# ***** BEGIN LICENSE BLOCK *****
# OpenPGP Zimbra Secure is the open source digital signature and encrypt for Zimbra Collaboration Open Source Edition software
# Copyright (C) 2016-present iWay Vietnam - http://www.iwayvietnam.com

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>
# ***** END LICENSE BLOCK *****
# 
# OpenPGP MIME Secure Email Zimlet
# 
# Written by Nguyen Van Nguyen <nguyennv1981@gmail.com>
# 
label = OpenPGP Secure Email
description = K\u00FD, x\u00E1c nh\u1EADn, m\u00E3 h\u00F3a, v\u00E0 gi\u1EA3i m\u00E3 email v\u1EDBi PGP/MIME b\u1EB1ng OpenPGP cho Zimbra 

messageSecurityHeader = B\u1EA3o m\u1EADt:
goodSignatureFrom = Ch\u1EEF k\u00FD h\u1EE3p l\u1EC7 t\u1EEB {0}
badSignatureFrom = Ch\u1EEF kh\u00F4ng k\u00FD h\u1EE3p l\u1EC7 t\u1EEB {0}
messageEncrypted = Th\u01B0 \u0111\u00E3 m\u00E3 h\u00F3a

dontEncryptMessage = Kh\u00f4ng m\u00e3 h\u00f3a
signMessage = K\u00FD
signAndEncryptMessage = K\u00FD v\u00E0 m\u00E3 h\u00F3a

unknown-error-title = M\u1ED9t l\u1ED7i \u0111\u00E3 x\u1EA3y ra
unknown-error = Ch\u00FAng t\u00F4i xin l\u1ED7i v\u00EC m\u1ED9t l\u1ED7i x\u1EA3y ra v\u1EDBi OpenPGP Secure Email.
attach-convert-error = M\u1ED9t l\u1ED7i \u0111\u00E3 x\u1EA3y ra trong khi k\u00FD/m\u00E3 h\u00F3a m\u1ED9t v\u00E0i t\u1EADp tin \u0111\u00EDnh k\u00E8m.
attach-convert-error-title = L\u1ED7i \u0111\u00EDnh k\u00E8m
encrypting-error = M\u1ED9t l\u1ED7i \u0111\u00E3 x\u1EA3y ra trong khi k\u00FD/m\u00E3 h\u00F3a th\u01B0.
encrypting-error-title = L\u1ED7i m\u00E3 h\u00F3a
decrypting-error = M\u1ED9t l\u1ED7i \u0111\u00E3 x\u1EA3y ra trong gi\u1EA3i m\u00E3/x\u00E1c nh\u1EADn th\u01B0.
decrypting-error-title = L\u1ED7i gi\u1EA3i m\u00E3

prefSection = B\u1EA3o m\u1EADt OpenPGP:
prefHeader = B\u1EA3o m\u1EADt OpenPGP:
prefSecurity = K\u00FD m\u00E0 m\u00E3 h\u00F3a th\u01B0:
prefSecurityAuto = T\u1EF1 \u0111\u1ED9ng (d\u00F9ng c\u1EA5u h\u00ECnh tr\u01B0\u1EDBc)
prefSecurityNone = Kh\u00F4ng k\u00FD v\u00E0 m\u00E3 h\u00F3a
prefSecuritySign = Ch\u1EC9 k\u00FD
prefSecurityBoth = K\u00FD v\u00E0 m\u00E3 h\u00F3a
prefKeypair = C\u1EB7p kh\u00F3a
prefPrivateKey = Kh\u00F3a b\u00ED m\u1EADt
prefPassphrase = Chu\u1ED7i m\u1EADt m\u00E3
prefPublicKey = Kh\u00F3a c\u00F4ng khai
prefPublicKeys = Kh\u00F3a c\u00F4ng khai
prefUid = ID ng\u01B0\u1EDDi d\u00F9ng
prefFingerprint = Chu\u1ED7i m\u1EADt m\u00E3
prefKeyLength = Chi\u1EC1u d\u00E0i kh\u00F3a
prefCreated = Ng\u00E0y t\u1EA1o

btnKeyGen = Sinh c\u1EB7p kh\u00F3a
btnPwdGen = Sinh chu\u1ED7i m\u1EADt m\u00E3
btnShowHide = \u1EA8n/Hi\u1EC7n
btnKeySubmit = G\u1EEDi t\u1EDBi m\u00E1y ch\u1EE7 kh\u00F3a
btnKeySend = G\u1EEDi kh\u00F3a c\u00F4ng khai
btnKeyExport = Xu\u1EA5t kh\u00F3a
btnKeyExportAll = Xu\u1EA5t kh\u00F3a
btnKeyLookup = T\u00ECm tr\u00EAn m\u00E1y ch\u1EE7 kh\u00F3a
btnKeyAdd = Th\u00EAm kh\u00F3a c\u00F4ng khai
btnSearch = T\u00ECm
chkOverride = L\u01B0u v\u00E0 ghi \u0111\u00E8 Kh\u00F3a b\u00ED m\u1EADt, Chu\u1ED7i m\u1EADt m\u00E3 v\u00E0 Kh\u00F3a c\u00F4ng khai hi\u1EC7n th\u1EDDi.

keyPairGenTitle = Sinh c\u1EB7p kh\u00F3a
keyPairGenName = T\u00EAn:
keyPairGenEmail = \u0110\u1ECBa ch\u1EC9 email:
keyPairGenEmailDesc = B\u1EA1n c\u00F3 th\u1EC3 ch\u1EC9 \u0111\u1ECBnh nhi\u1EC1u \u0111\u1ECBa ch\u1EC9 email, ph\u00E2n c\u00E1ch b\u1EB1ng d\u1EA5u ph\u1EA9y (,)
keyPairGenPassphrase = Chu\u1ED7i m\u1EADt m\u00E3:
keyPairGenKeyLength = Chi\u1EC1u d\u00E0i kh\u00F3a:
keyPairGenKeyLengthDesc = Chi\u1EC1u d\u00E0i kh\u00F3a l\u1EDBn h\u01A1n th\u00EC b\u1EA3o m\u1EADt t\u1ED1t h\u01A1n, nh\u01B0ng ch\u1EADm h\u01A1n.

keyLookupTitle = T\u00ECm tr\u00EAn m\u00E1y ch\u1EE7 kh\u00F3a ({0})

keyAddTitle = Th\u00EAm kh\u00F3a c\u00F4ng khai
publicKeySubmitted = Kh\u00F3a c\u00F4ng khai c\u1EE7a b\u1EA1n \u0111\u00E3 g\u1EEDi th\u00E0nh c\u00F4ng!

sendPublicKeyTitle = G\u1EEDi kh\u00F3a c\u00F4ng khai t\u1EDBi ng\u01B0\u1EDDi kh\u00E1c
sendPublicKeyEmail = \u0110\u1ECBa ch\u1EC9 email:
sendPublicKeySubject = Kh\u00F3a c\u00F4ng khai t\u1EEB {0}
sendPublicKeyEmailDesc = B\u1EA1n c\u00F3 th\u1EC3 ch\u1EC9 \u0111\u1ECBnh nhi\u1EC1u \u0111\u1ECBa ch\u1EC9 email, ph\u00E2n c\u00E1ch b\u1EB1ng d\u1EA5u ph\u1EA9y (,)
sendPublicKeySubmitted = Kh\u00F3a c\u00F4ng khai c\u1EE7a b\u1EA1n v\u1EEBa \u0111\u01B0\u1EE3c g\u1EEDi th\u00E0nh c\u00F4ng!

importPublicKeyTitle = Nh\u1EADp kh\u00F3a c\u00F4ng khai
publicKeyImported = Kh\u00F3a c\u00F4ng khai v\u1EEBa \u0111\u01B0\u1EE3c nh\u1EADp!

parseMessageError = Sai th\u00F4ng \u0111i\u1EC7p! Kh\u00F4ng th\u1EC3 ph\u00E2n t\u00EDch th\u00F4ng \u0111i\u1EC7p email!
parseDecryptedMessageError = Sai th\u00F4ng \u0111i\u1EC7p! Kh\u00F4ng th\u1EC3 gi\u1EA3i m\u00E3 th\u00F4ng \u0111i\u1EC7p email!
decryptPrivateKeyError = Sai chu\u1ED7i m\u1EADt m\u00E3! kh\u00F4ng th\u1EC3 gi\u1EA3i m\u00E3 kh\u00F3a b\u00ED m\u1EADt!

notHavePrivateKeyWarning = B\u1EA1n kh\u00F4ng c\u00F3 kh\u00F3a b\u00ED m\u1EADt \u0111\u1EC3 k\u00FD. Vui l\u00F2ng t\u1EDBi t\u00F9y ch\u1ECDn B\u1EA3o m\u1EADt OpenPGP v\u00E0 sinh c\u1EB7p kh\u00F3a c\u1EE7a b\u1EA1n. B\u1EA5m v\u00E0o \u0110\u1ED3ng \u00FD n\u1EBFu b\u1EA1n mu\u1ED1n g\u1EEDi th\u01B0 n\u00E0y m\u00E0 kh\u00F4ng k\u00FD.
notHavePublicKeyWarning = {0} kh\u00F4ng c\u00F3 kh\u00F3a c\u00F4ng khai \u0111\u1EC3 m\u00E3 h\u00F3a. Vui l\u00F2ng t\u1EDBi t\u00F9y ch\u1ECDn B\u1EA3o m\u1EADt OpenPGP v\u00E0 th\u00EAm kh\u00F3a c\u00F4ng khai. B\u1EA5m \u0110\u1ED3ng \u00FD n\u1EBFu b\u1EA1n mu\u1ED1n g\u1EEDi th\u01B0 n\u00E0y.

keyInfoUid = ID ng\u01B0\u1EDDi d\u00F9ng
keyInfoFingerprint = D\u1EA5u tay
keyInfoKeyId = ID kh\u00F3a
keyInfoAlgorithm = Thu\u1EADt to\u00E1n
keyInfoKeylength = Chi\u1EC1u d\u00E0i kh\u00F3a
keyInfoCreated = Ng\u00E0y t\u1EA1o

decryptFile = Gi\u1EA3i m\u00E3
importPublicKey = Nh\u1EADp kh\u00F3a

ok = \u0110\u1ED3ng \u00FD
cancel = H\u1EE7y b\u1ECF
